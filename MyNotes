N- Chapter1 , page 15 
Table 1-4 Symbol Commands :
( )       Runs the enclosed command in a sub-shell
  As an example :
  $ pwd 
  $ /home/user1
  $ ( cd Documents ; pwd )
  $ /home/user1/Documents
  $ pwd
  $ /home/user1

E- Chapter1 , page 15 
Command-Line Arguments :
    "The positional parameters, $0, $2, and so on in a function are for the function’s use" 
The correct text should be 
    "The positional parameters, $1, $2, and so on in a function are for the function’s use"

E- Chapter1 , page 16-17
Listing 1-2 Example of using the shift command
The script (it is a kind of template ,but still it should be clear) as it is written in the book,
does not provide a mechanism to exit the while-loop. And the point at which the addition +1 happens 
isnot good. Here is how it should be :
  #!/usr/bin/sh
  # Mastering Unix Shell scripting 2008, Chapter1 page 16
  # Listing 1-2 Example of using the shift command
  TOTAL=0		# Initialize the TOTAL counter to zero
  # Start a while loop
  while true
  do
  	TOKEN=$1
  	[ -z $TOKEN ] && break;  #if no command line argument was given break out of while-loop
  	TOTAL=`expr $TOTAL + 1`  #or TOTAL=$(($TOTAL + 1))
  	echo "Argument processed : $TOKEN " #
  	shift		# Grab the next token, i.e. $2 becomes $1
  done
  echo "Total number of tokens processed: $TOTAL"

N- Chapter1 Setting traps , page 25
A full example can be:
  #!/bin/bash
  echo "we create a temporary file in /tmp"
  touch /tmp/trap_file.txt
  trap 'echo -e "\nPremature termination.Cleaning temp files before exiting.\n"; rm /tmp/temp_file.txt; exit' 1 2 3 15
  read -p "give some words as input to the file /tmp/trap_file.txt: "
  echo $REPLY > /tmp/trap_file.txt
  echo "Here are the contents of the file , before we destroy it:"
  cat /tmp/trap_file.txt
  rm /tmp/trap_file.txt
